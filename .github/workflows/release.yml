name: Release

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: "New version type"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major
          - dev

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main  # Ensure we start from the main branch

      - name: Configure Git
        run: |
          git config --global user.email "${{ vars.FIB_BOT_MAIL }}"
          git config --global user.name "${{ vars.FIB_BOT }}"

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.0"

      - name: Install dependencies
        run: composer install --no-progress --no-suggest --prefer-dist

      - name: Bump version
        id: bump_version
        run: |
          CURRENT_VERSION=$(jq -r '.version' composer.json)
          VERSION_TYPE=${{ github.event.inputs.version_type }}
          IFS='.' read -r -a version_parts <<< "$CURRENT_VERSION"
          major=${version_parts[0]}
          minor=${version_parts[1]}
          patch=${version_parts[2]}
          if [[ "$VERSION_TYPE" == "patch" ]]; then
            patch=$((patch + 1))
          elif [[ "$VERSION_TYPE" == "minor" ]]; then
            minor=$((minor + 1))
            patch=0
          elif [[ "$VERSION_TYPE" == "major" ]]; then
            major=$((major + 1))
            minor=0
            patch=0
          elif [[ "$VERSION_TYPE" == "dev" ]]; then
            NEW_VERSION="${major}.${minor}.${patch}-dev"
          else
            echo "Unsupported version type specified."
            exit 1
          fi
          NEW_VERSION="$major.$minor.$patch"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Update composer.json
        run: |
          jq --arg version "$NEW_VERSION" '.version = $version' composer.json > tmp.json && mv tmp.json composer.json
          git add composer.json
          git commit -m "Bump version to ${{ env.NEW_VERSION }}"

      - name: Create and push tag
        run: |
          git tag -a "v${{ env.NEW_VERSION }}" -m "Release version ${{ env.NEW_VERSION }}"
          git push origin main --tags
